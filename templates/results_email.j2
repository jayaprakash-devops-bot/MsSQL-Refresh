The tower job id is {{ tower_job_id }}.

{% if 'failed' in log_msg or 'Failed' in log_msg %}
***** There was an error - review attached log file for details *****
{% endif %}

{% if (dry_run | string) == 'true' %}
This was executed in dry-run mode.
{% endif %}
{% if (refreshonly | string) == 'true' %}
This run refreshed the existing destination database.
{% else %}
This run performed a full migration.
{% endif %}

The backup type chosen was: {{ restore_type }}
{% if restore_type == 'Point In Time (Requires Stop at Parameter)' and stop_at is defined %}
The requested stop-at time was {{ stop_at }}.
{% endif %}

Availability Group summary:
- Target AG name: {{ refresh_context.target.ag_name | default('N/A') }}
- Rejoin method selected: {{ refresh_context.actions.rejoin_method | default('none') }}
- Remove-from-AG performed: {{ refresh_context.actions.remove_dest_from_ag | default(false) }}

Backup details:
{% set full_backup = refresh_context.restore.full_backup | default({}) %}
{% if full_backup %}
- Last full backup: {{ full_backup.physical_device_name }} ({{ full_backup.backup_finish_date }}) on {{ full_backup.node }}
{% else %}
- No full backup metadata captured
{% endif %}
{% set diff_backup = refresh_context.restore.diff_backup | default({}) %}
- Differential backup available: {{ (diff_backup != {}) and (refresh_context.source.diff_backup_valid | default(false)) }}
{% if diff_backup %}
  Source: {{ diff_backup.physical_device_name }} ({{ diff_backup.backup_finish_date }}) on {{ diff_backup.node }}
{% endif %}

Execution endpoints:
- Source primary replica: {{ refresh_context.source.primary_replica | default(src_instance) }}
- Destination primary replica: {{ refresh_context.target.primary_replica | default(dest_instance) }}
- Listener endpoint: {{ refresh_context.target.listener | default('n/a') }}

Security artifacts were captured and attached.

Restore script excerpt:
{{ restore_script | truncate(4000, True, '...') }}
